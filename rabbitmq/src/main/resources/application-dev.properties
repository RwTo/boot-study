server.port=8081
# mq配置
spring.rabbitmq.host=127.0.0.1
spring.rabbitmq.port=5672
spring.rabbitmq.virtual-host=/
spring.rabbitmq.username=rabbitmq
spring.rabbitmq.password=rabbitmq

# 同一时刻最多投递给消费者一个消息，每次只能获取一条，处理完才获取下一个，默认是250，qos=1
# prefetch=1 用来均衡机器之间的性能，能者多劳，充分利用消费者的性能，每次只取一个，处理完再处理下一个
spring.rabbitmq.listener.simple.prefetch=1



# 设置MQ连接超时时间
spring.rabbitmq.connection-timeout=1s
# 开启超时重试机制，注意：这是阻塞式重试，会影响性能，请合理使用
spring.rabbitmq.template.retry.enabled=true
# 失败后的初始等待时间
spring.rabbitmq.template.retry.initial-interval=1000ms
# 失败后下次等待的时长倍数，等待时长 initial-interval * multiplier = 例：等待时长  1s 2s 4s
spring.rabbitmq.template.retry.multiplier=1
# 最大重试次数
spring.rabbitmq.template.retry.max-attempts=3

# 开启确认会影响性能，谨慎使用
# 开启publisher-confirm 机制，并指定类型，开启后一定会触发确认机制，未到达交换机或者消息没有正常持久化时 是nack
# 三种模式
# 1. none 关闭（默认）
# 2. simple 同步阻塞等待MQ的回执消息
# 3. correlated MQ异步回调的方式返回回执消息 （推荐）
spring.rabbitmq.publisher-confirm-type=correlated
# 开启publisher-return机制, 到达交换机没有路由到队列时触发
spring.rabbitmq.publisher-returns=true